version: '3.5'

services:
  # Nginx service
  nginx:
    # Build the Docker image from the Nginx Dockerfile in requirements/nginx/
    image: nginx
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    # Set a container name
    container_name: nginx
    # Depend on the WordPress service being up and running
    depends_on:
      - wordpress
    # Publish port 443 on the host to port 443 in the container
    ports:
      - "443:443"
    # Attach to the inception network
    networks:
      - inception
    # Mount local directories as volumes in the container
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp-volume:/var/www/
    # Always restart the container if it stops
    restart: always

  # MariaDB service
  mariadb:
    # Build the Docker image from the MariaDB Dockerfile in requirements/mariadb/
    image: mariadb
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        # Pass arguments for the database name, username, password, and root password
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
    # Set a container name
    container_name: mariadb
    # Publish port 3306 on the host to port 3306 in the container
    ports:
      - "3306:3306"
    # Attach to the inception network
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    # Always restart the container if it stops
    restart: always

  # WordPress service
  wordpress:
    # Build the Docker image from the WordPress Dockerfile in requirements/wordpress/
    image: wordpress
    env_file:
      - .env
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        # Pass arguments for the database name, username, and password
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        WPADPASS: ${WPADPASS}
        WPUSER1PASS: ${WPUSER1PASS}
    # Set a container name
    container_name: wordpress
    # Depend on the MariaDB service being up and running
    depends_on:
      - mariadb
    ports:
      - "9000:80"
    # Always restart the container if it stops
    restart: always
    # Attach to the inception network
    networks:
      - inception
    # Mount the wp-volume volume in the container
    volumes:
      - wp-volume:/var/www/

  redis:
    image: redis
    build:
      context: .
      dockerfile: requirements/bonus/redis/Dockerfile
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - inception
    restart: always

  vsftpd:
    image: vsftpd
    build:
      context: .
      dockerfile: requirements/bonus/vsftpd/Dockerfile
      args:
        FTP_USR: ${FTP_USR}
        FTP_PWD: ${FTP_PWD}
    container_name: vsftpd
    ports:
      - "21:21"
    volumes:
      - wp-volume:/var/www/
    networks:
     - inception
    restart: always

  adminer:
    image: adminer
    build:
      context: .
      dockerfile: requirements/bonus/adminer/Dockerfile
    container_name: adminer
    depends_on:
      - mariadb
    ports:
      - "8080:8080"
    networks:
     - inception
    restart: always

  website:
    image: website
    build:
      context: .
      dockerfile: requirements/bonus/website/Dockerfile
    container_name: website
    ports:
      - "80:80"
    restart: always

# Define Docker volumes
volumes:
  # wp-volume volume for WordPress files
  wp-volume:
    # Set driver options for the volume
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wordpress

  # db-volume volume for MariaDB files
  db-volume:
    # Set driver options for the volume
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/mariadb

# Define Docker networks
networks:
  # inception bridge network
  inception:
    # Set the network driver to bridge
    driver: bridge
